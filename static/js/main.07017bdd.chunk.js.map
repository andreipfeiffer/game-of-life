{"version":3,"sources":["utils.ts","App.tsx","hooks.ts","index.tsx","presets.ts"],"names":["getInitialState","start","width","height","result","row","col","getNeighbors","grid","length","prevX","nextX","prevY","nextY","App","props","presets","React","useState","play","setPlay","lifetime","setLifetime","setWidth","setHeight","preset","setPreset","population","setPopulation","stringGrid","map","cell","join","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","useInterval","next","isAlive","alive","filter","getNextPopulation","onClick","type","value","onChange","e","target","newWidth","newHeight","key","description","newPreset","find","p","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.07017bdd.chunk.js","sourcesContent":["import { Grid } from \"./types\";\n\nexport function getInitialState(\n  start: Array<Array<any>>,\n  width: number,\n  height: number\n): Grid {\n  const result: Grid = [];\n\n  for (let row = 0; row < height; row += 1) {\n    result[row] = [];\n\n    for (let col = 0; col < width; col += 1) {\n      result[row][col] = !!start?.[row]?.[col];\n    }\n  }\n\n  return result;\n}\n\nexport function getStringGrid(grid: Grid): string {\n  return grid\n    .map((row) => {\n      return row.map((cell) => (cell ? \"x\" : \" \")).join(\"\");\n    })\n    .join(\"\\n\");\n}\n\nexport function getNextPopulation(grid: Array<Array<any>>): Grid {\n  const next: Grid = [];\n\n  for (let row = 0; row < grid.length; row += 1) {\n    next[row] = [];\n\n    for (let col = 0; col < grid[row].length; col += 1) {\n      const isAlive = !!grid[row][col];\n      const neighbors = getNeighbors(grid, row, col);\n      const alive = neighbors.filter((cell) => !!cell);\n\n      if (alive.length === 3) {\n        next[row][col] = true;\n      } else if (alive.length === 2 && isAlive) {\n        next[row][col] = true;\n      } else {\n        next[row][col] = false;\n      }\n\n      // console.log({\n      //   row,\n      //   col,\n      //   alive,\n      //   current: grid[row][col],\n      //   next: next[row][col],\n      // });\n    }\n  }\n\n  return next;\n}\n\nexport function getNeighbors(\n  grid: Array<Array<any>>,\n  row: number,\n  col: number\n): Array<any> {\n  const height = grid.length;\n  const width = grid[0].length;\n\n  const prevX = col > 0 ? col - 1 : width - 1;\n  const nextX = col < width - 1 ? col + 1 : 0;\n\n  const prevY = row > 0 ? row - 1 : height - 1;\n  const nextY = row < height - 1 ? row + 1 : 0;\n\n  return [\n    grid[prevY][prevX], // top left\n    grid[prevY][col], // top\n    grid[prevY][nextX], // top right\n    grid[row][prevX], // left\n    grid[row][nextX], // right\n    grid[nextY][prevX], // bottom left\n    grid[nextY][col], // bottom\n    grid[nextY][nextX], // bottom right\n  ];\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport { Grid, Preset } from \"./types\";\nimport { getInitialState, getStringGrid, getNextPopulation } from \"./utils\";\nimport { useInterval } from \"./hooks\";\n\ninterface Props {\n  start: Grid;\n  presets: Preset[];\n}\n\nfunction App(props: Props) {\n  const { start, presets } = props;\n\n  const [play, setPlay] = React.useState(false);\n  const [lifetime, setLifetime] = React.useState(1000);\n  const [width, setWidth] = React.useState(start[0].length);\n  const [height, setHeight] = React.useState(start.length);\n\n  const [preset, setPreset] = React.useState(\"\");\n\n  const [population, setPopulation] = React.useState<Grid>(\n    getInitialState(start, width, height)\n  );\n\n  const stringGrid = getStringGrid(population);\n\n  useInterval(tick, play ? lifetime : null);\n\n  function tick() {\n    setPopulation(getNextPopulation(population));\n  }\n\n  function updateWidth(newWidth: number) {\n    setWidth(newWidth);\n    setPopulation(getInitialState(population, newWidth, height));\n  }\n\n  function updateHeight(newHeight: number) {\n    setHeight(newHeight);\n    setPopulation(getInitialState(population, width, newHeight));\n  }\n\n  return (\n    <div>\n      <button onClick={() => setPlay(!play)}>{play ? \"Stop\" : \"Play\"}</button>\n      <input\n        type=\"number\"\n        value={lifetime}\n        onChange={(e) => setLifetime(+e.target.value)}\n      />\n      <input\n        type=\"number\"\n        value={width}\n        onChange={(e) => updateWidth(+e.target.value)}\n      />\n      <input\n        type=\"number\"\n        value={height}\n        onChange={(e) => updateHeight(+e.target.value)}\n      />\n      <select value={preset} onChange={(e) => setPreset(e.target.value)}>\n        <option value=\"\">Presets</option>\n        {presets.map((preset) => (\n          <option key={preset.id} value={preset.id}>\n            {preset.description}\n          </option>\n        ))}\n      </select>\n      <button onClick={loadPreset}>Load preset</button>\n      <br />\n      <pre>{stringGrid}</pre>\n    </div>\n  );\n\n  function loadPreset() {\n    const newPreset = presets.find((p) => p.id === preset);\n    setHeight(newPreset?.height || height);\n    setWidth(newPreset?.width || width);\n    setPopulation(newPreset?.grid || population);\n  }\n}\n\nexport default App;\n","import React from \"react\";\n\nexport function useInterval(callback: Function, delay: number | null) {\n  const savedCallback = React.useRef() as React.MutableRefObject<Function>;\n\n  // Remember the latest function.\n  React.useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback, savedCallback]);\n\n  // Set up the interval.\n  React.useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay, savedCallback]);\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport \"./index.css\";\nimport { getPresets } from \"./presets\";\n\nconst presets = getPresets();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App start={presets[0].grid} presets={presets} />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { Preset } from \"./types\";\n\nexport function getPresets(): Preset[] {\n  return [\n    {\n      id: \"block\",\n      description: \"Block (Still lifes)\",\n      width: 4,\n      height: 4,\n      grid: [\n        [false, false, false, false],\n        [false, true, true, false],\n        [false, true, true, false],\n        [false, false, false, false],\n      ],\n    },\n    {\n      id: \"blinker\",\n      description: \"Blinker (period 2 Oscillator)\",\n      width: 5,\n      height: 5,\n      grid: [\n        [false, false, false, false, false],\n        [false, false, false, false, false],\n        [false, true, true, true, false],\n        [false, false, false, false, false],\n        [false, false, false, false, false],\n      ],\n    },\n    {\n      id: \"toad\",\n      description: \"Toad (period 2 oscillator)\",\n      width: 6,\n      height: 6,\n      grid: [\n        [false, false, false, false, false, false],\n        [false, false, false, false, false, false],\n        [false, false, true, true, true, false],\n        [false, true, true, true, false, false],\n        [false, false, false, false, false, false],\n        [false, false, false, false, false, false],\n      ],\n    },\n    {\n      id: \"glider\",\n      description: \"Glider (Spaceship)\",\n      width: 5,\n      height: 5,\n      grid: [\n        [false, false, false, false, false],\n        [false, false, true, false, false],\n        [false, false, false, true, false],\n        [false, true, true, true, false],\n        [false, false, false, false, false],\n      ],\n    },\n  ];\n}\n"],"sourceRoot":""}