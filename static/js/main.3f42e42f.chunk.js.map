{"version":3,"sources":["utils.ts","Life.tsx","App.tsx","hooks.ts","index.tsx","presets.ts"],"names":["getInitialState","start","width","height","result","row","col","getNeighbors","grid","length","prevX","nextX","prevY","nextY","OptimizedRow","React","memo","props","y","size","onToggle","key","className","map","cell","x","OptimizedCell","alive","onClick","style","Life","population","App","presets","useState","play","setPlay","lifetime","setLifetime","setWidth","setHeight","setSize","manualChange","increaseManualChange","id","preset","setPreset","setPopulation","callback","delay","savedCallback","useRef","useEffect","current","setInterval","clearInterval","useInterval","window","performance","mark","next","isRowChanged","isAlive","filter","measure","getNextPopulation","optimizedToggleCell","useCallback","newRow","newPopulation","slice","value","onChange","e","newPreset","find","p","newWidth","Math","max","newHeight","loadPreset","target","description","type","maxLength","updateWidth","updateHeight","console","log","JSON","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f42e42f.chunk.js","sourcesContent":["import { Grid } from \"./types\";\n\nexport function getInitialState(\n  start: Array<Array<any>>,\n  width: number,\n  height: number\n): Grid {\n  const result: Grid = [];\n\n  for (let row = 0; row < height; row += 1) {\n    result[row] = [];\n\n    for (let col = 0; col < width; col += 1) {\n      result[row][col] = !!start?.[row]?.[col];\n    }\n  }\n\n  return result;\n}\n\nexport function getNextPopulation(grid: Array<Array<any>>): Grid {\n  window.performance.mark(\"calculateNextTickStart\");\n\n  const next: Grid = [];\n\n  for (let row = 0; row < grid.length; row += 1) {\n    next[row] = [];\n    let isRowChanged = false;\n\n    for (let col = 0; col < grid[row].length; col += 1) {\n      const isAlive = !!grid[row][col];\n      const neighbors = getNeighbors(grid, row, col);\n      const alive = neighbors.filter((cell) => !!cell);\n\n      if (alive.length === 3) {\n        next[row][col] = true;\n      } else if (alive.length === 2 && isAlive) {\n        next[row][col] = true;\n      } else {\n        next[row][col] = false;\n      }\n\n      if (next[row][col] !== grid[row][col]) {\n        // mark that the row has changed\n        isRowChanged = true;\n      }\n    }\n\n    if (!isRowChanged) {\n      // copy row reference if it hasn't changed\n      // so it is optimized by React.memo()\n      next[row] = grid[row];\n    }\n  }\n\n  window.performance.mark(\"calculateNextTickEnd\");\n  window.performance.measure(\n    \"calculateNextTick\",\n    \"calculateNextTickStart\",\n    \"calculateNextTickEnd\"\n  );\n\n  return next;\n}\n\nexport function getNeighbors(\n  grid: Array<Array<any>>,\n  row: number,\n  col: number\n): Array<any> {\n  const height = grid.length;\n  const width = grid[0].length;\n\n  const prevX = col > 0 ? col - 1 : width - 1;\n  const nextX = col < width - 1 ? col + 1 : 0;\n\n  const prevY = row > 0 ? row - 1 : height - 1;\n  const nextY = row < height - 1 ? row + 1 : 0;\n\n  return [\n    grid[prevY][prevX], // top left\n    grid[prevY][col], // top\n    grid[prevY][nextX], // top right\n    grid[row][prevX], // left\n    grid[row][nextX], // right\n    grid[nextY][prevX], // bottom left\n    grid[nextY][col], // bottom\n    grid[nextY][nextX], // bottom right\n  ];\n}\n","import React from \"react\";\nimport { Grid } from \"./types\";\nimport \"./Life.css\";\n\ninterface Props {\n  population: Grid;\n  size: number;\n  onToggle(x: number, y: number): void;\n}\n\nconst SIZE_LIMIT = 15;\nconst OptimizedRow = React.memo(Row);\nconst OptimizedCell = React.memo(Cell);\n\nfunction Life(props: Props) {\n  const { population, size, onToggle } = props;\n\n  return (\n    <div className={`life ${size < SIZE_LIMIT ? \"life-border\" : \"\"}`}>\n      {population.map((row, y) => (\n        <OptimizedRow key={y} row={row} y={y} size={size} onToggle={onToggle} />\n      ))}\n    </div>\n  );\n}\n\ninterface RowProps {\n  row: Array<boolean>;\n  y: number;\n  size: number;\n  onToggle(x: number, y: number): void;\n}\n\nfunction Row(props: RowProps) {\n  const { y, size, row, onToggle } = props;\n  return (\n    <div key={y} className=\"row\">\n      {row.map((cell, x) => (\n        <OptimizedCell\n          key={`${y}${x}`}\n          x={x}\n          y={y}\n          onToggle={onToggle}\n          size={size}\n          alive={cell}\n        />\n      ))}\n    </div>\n  );\n}\n\ninterface CellProps {\n  alive: boolean;\n  x: number;\n  y: number;\n  size: number;\n  onToggle(x: number, y: number): void;\n}\n\nfunction Cell(props: CellProps) {\n  const { alive, x, y, size, onToggle } = props;\n  return (\n    <span\n      className={`cell ${alive ? \"cell-alive\" : \"\"} ${\n        size < SIZE_LIMIT ? \"no-border\" : \"\"\n      }`}\n      onClick={() => onToggle(x, y)}\n      style={{ width: size, height: size }}\n    ></span>\n  );\n}\n\nexport default Life;\n","import React from \"react\";\nimport \"./App.css\";\nimport { Grid, Preset } from \"./types\";\nimport { getInitialState, getNextPopulation } from \"./utils\";\nimport { useInterval } from \"./hooks\";\nimport Life from \"./Life\";\n\ninterface Props {\n  presets: Preset[];\n}\n\nconst MIN_LENGTH = 4;\n\nfunction App(props: Props) {\n  const { presets } = props;\n\n  const [play, setPlay] = React.useState(true);\n  const [lifetime, setLifetime] = React.useState(500);\n  const [width, setWidth] = React.useState(presets[0].grid[0].length);\n  const [height, setHeight] = React.useState(presets[0].grid.length);\n  const [size, setSize] = React.useState(30);\n  const [manualChange, increaseManualChange] = React.useState(0);\n  const [preset, setPreset] = React.useState(presets[0].id);\n\n  const [population, setPopulation] = React.useState<Grid>(\n    getInitialState(presets[0].grid, width, height)\n  );\n\n  useInterval(nextGeneration, play ? lifetime : null);\n\n  const optimizedToggleCell = React.useCallback(toggleCell, [\n    width,\n    height,\n    manualChange,\n  ]);\n\n  return (\n    <div>\n      Preset:{\" \"}\n      <select value={preset} onChange={(e) => loadPreset(e.target.value)}>\n        <option value=\"\">Select a preset</option>\n        {presets.map((preset) => (\n          <option key={preset.id} value={preset.id}>\n            {preset.description}\n          </option>\n        ))}\n      </select>\n      <br />\n      <br />\n      Cycle :{\" \"}\n      <input\n        type=\"number\"\n        value={lifetime}\n        onChange={(e) => setLifetime(+e.target.value)}\n        maxLength={4}\n        className=\"input\"\n      />{\" \"}\n      Width:{\" \"}\n      <input\n        type=\"number\"\n        value={width}\n        onChange={(e) => updateWidth(+e.target.value)}\n        maxLength={3}\n        className=\"input\"\n      />{\" \"}\n      Height:{\" \"}\n      <input\n        type=\"number\"\n        value={height}\n        onChange={(e) => updateHeight(+e.target.value)}\n        maxLength={3}\n        className=\"input\"\n      />{\" \"}\n      Size:{\" \"}\n      <input\n        type=\"number\"\n        value={size}\n        onChange={(e) => setSize(+e.target.value)}\n        maxLength={3}\n        className=\"input\"\n      />{\" \"}\n      <br />\n      <br />\n      <button onClick={() => setPlay(!play)}>\n        {play ? \"Stop\" : \"Play\"}\n      </button>{\" \"}\n      {play === false && (\n        <button onClick={output} className=\"secondary\">\n          Output\n        </button>\n      )}{\" \"}\n      <hr />\n      <div className={`${play ? \"playing\" : \"\"}`}>\n        <Life\n          population={population}\n          onToggle={optimizedToggleCell}\n          size={size}\n        />\n      </div>\n    </div>\n  );\n\n  function nextGeneration() {\n    setPopulation(getNextPopulation(population));\n  }\n\n  function updateWidth(value: number) {\n    const newWidth = Math.max(value, MIN_LENGTH);\n    setWidth(newWidth);\n    setPreset(\"\");\n    setPopulation(getInitialState(population, newWidth, height));\n  }\n\n  function updateHeight(value: number) {\n    const newHeight = Math.max(value, MIN_LENGTH);\n    setHeight(newHeight);\n    setPreset(\"\");\n    setPopulation(getInitialState(population, width, newHeight));\n  }\n\n  function loadPreset(id: string) {\n    const newPreset = presets.find((p) => p.id === id);\n    const newWidth = Math.max(newPreset?.width ?? 0, width);\n    const newHeight = Math.max(newPreset?.height ?? 0, height);\n\n    setHeight(newHeight);\n    setWidth(newWidth);\n    setPreset(id);\n\n    setPopulation(\n      getInitialState(newPreset?.grid || population, newWidth, newHeight)\n    );\n  }\n\n  function toggleCell(x: number, y: number) {\n    const newRow = [...population[y]];\n    newRow[x] = !newRow[x];\n\n    const newPopulation = [\n      ...population.slice(0, y),\n      newRow,\n      ...population.slice(y + 1),\n    ];\n\n    setPopulation(newPopulation);\n    setPreset(\"\");\n    increaseManualChange(manualChange + 1);\n  }\n\n  function output() {\n    console.log(JSON.stringify(population));\n  }\n}\n\nexport default App;\n","import React from \"react\";\n\nexport function useInterval(callback: Function, delay: number | null) {\n  const savedCallback = React.useRef() as React.MutableRefObject<Function>;\n\n  // Remember the latest function.\n  React.useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback, savedCallback]);\n\n  // Set up the interval.\n  React.useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay, savedCallback]);\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport { getPresets } from \"./presets\";\n\nconst presets = getPresets();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App presets={presets} />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { Preset } from \"./types\";\n\nexport function getPresets(): Preset[] {\n  return [\n    {\n      id: \"block\",\n      description: \"Block (Still life)\",\n      width: 4,\n      height: 4,\n      grid: [\n        [false, false, false, false],\n        [false, true, true, false],\n        [false, true, true, false],\n        [false, false, false, false],\n      ],\n    },\n    {\n      id: \"blinker\",\n      description: \"Blinker (period 2 Oscillator)\",\n      width: 5,\n      height: 5,\n      grid: [\n        [false, false, false, false, false],\n        [false, false, false, false, false],\n        [false, true, true, true, false],\n        [false, false, false, false, false],\n        [false, false, false, false, false],\n      ],\n    },\n    {\n      id: \"toad\",\n      description: \"Toad (period 2 Oscillator)\",\n      width: 6,\n      height: 6,\n      grid: [\n        [false, false, false, false, false, false],\n        [false, false, false, false, false, false],\n        [false, false, true, true, true, false],\n        [false, true, true, true, false, false],\n        [false, false, false, false, false, false],\n        [false, false, false, false, false, false],\n      ],\n    },\n    {\n      id: \"glider\",\n      description: \"Glider (Spaceship)\",\n      width: 5,\n      height: 5,\n      grid: [\n        [false, false, false, false, false],\n        [false, false, true, false, false],\n        [false, false, false, true, false],\n        [false, true, true, true, false],\n        [false, false, false, false, false],\n      ],\n    },\n    {\n      id: \"r_pentomino\",\n      description: \"The R-pentomino (Methuselahs)\",\n      width: 200,\n      height: 100,\n      grid: [\n        [false],\n        [false],\n        [false],\n        [false],\n        [false],\n        [false],\n        [false],\n        [false],\n        [false],\n        [false],\n        [false],\n        [false],\n        [false],\n        [false],\n        [false],\n        [false],\n        [false],\n        [false],\n        [false],\n        [\n          false,\n          false,\n          false,\n          false,\n          false,\n          false,\n          false,\n          false,\n          false,\n          false,\n          false,\n          false,\n          false,\n          false,\n          false,\n          false,\n          true,\n          true,\n        ],\n        [\n          false,\n          false,\n          false,\n          false,\n          false,\n          false,\n          false,\n          false,\n          false,\n          false,\n          false,\n          false,\n          false,\n          false,\n          false,\n          true,\n          true,\n          false,\n        ],\n        [\n          false,\n          false,\n          false,\n          false,\n          false,\n          false,\n          false,\n          false,\n          false,\n          false,\n          false,\n          false,\n          false,\n          false,\n          false,\n          false,\n          true,\n          false,\n        ],\n      ],\n    },\n  ];\n}\n"],"sourceRoot":""}