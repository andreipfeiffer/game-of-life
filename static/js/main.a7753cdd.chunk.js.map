{"version":3,"sources":["utils.ts","Life.tsx","App.tsx","hooks.ts","index.tsx","presets.ts"],"names":["getInitialState","start","width","height","result","row","col","getNeighbors","grid","length","prevX","nextX","prevY","nextY","Life","props","population","className","map","cell","alive","renderRow","App","presets","React","useState","play","setPlay","lifetime","setLifetime","setWidth","setHeight","id","preset","setPreset","setPopulation","callback","delay","savedCallback","useRef","useEffect","current","setInterval","clearInterval","useInterval","next","isAlive","filter","getNextPopulation","value","onChange","e","newPreset","find","p","loadPreset","target","key","description","type","maxLength","newWidth","newHeight","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a7753cdd.chunk.js","sourcesContent":["import { Grid } from \"./types\";\n\nexport function getInitialState(\n  start: Array<Array<any>>,\n  width: number,\n  height: number\n): Grid {\n  const result: Grid = [];\n\n  for (let row = 0; row < height; row += 1) {\n    result[row] = [];\n\n    for (let col = 0; col < width; col += 1) {\n      result[row][col] = !!start?.[row]?.[col];\n    }\n  }\n\n  return result;\n}\n\nexport function getNextPopulation(grid: Array<Array<any>>): Grid {\n  const next: Grid = [];\n\n  for (let row = 0; row < grid.length; row += 1) {\n    next[row] = [];\n\n    for (let col = 0; col < grid[row].length; col += 1) {\n      const isAlive = !!grid[row][col];\n      const neighbors = getNeighbors(grid, row, col);\n      const alive = neighbors.filter((cell) => !!cell);\n\n      if (alive.length === 3) {\n        next[row][col] = true;\n      } else if (alive.length === 2 && isAlive) {\n        next[row][col] = true;\n      } else {\n        next[row][col] = false;\n      }\n    }\n  }\n\n  return next;\n}\n\nexport function getNeighbors(\n  grid: Array<Array<any>>,\n  row: number,\n  col: number\n): Array<any> {\n  const height = grid.length;\n  const width = grid[0].length;\n\n  const prevX = col > 0 ? col - 1 : width - 1;\n  const nextX = col < width - 1 ? col + 1 : 0;\n\n  const prevY = row > 0 ? row - 1 : height - 1;\n  const nextY = row < height - 1 ? row + 1 : 0;\n\n  return [\n    grid[prevY][prevX], // top left\n    grid[prevY][col], // top\n    grid[prevY][nextX], // top right\n    grid[row][prevX], // left\n    grid[row][nextX], // right\n    grid[nextY][prevX], // bottom left\n    grid[nextY][col], // bottom\n    grid[nextY][nextX], // bottom right\n  ];\n}\n","import React from \"react\";\nimport { Grid } from \"./types\";\nimport \"./Life.css\";\n\ninterface Props {\n  population: Grid;\n}\n\nfunction Life(props: Props) {\n  const { population } = props;\n\n  return (\n    <table className=\"life\">{population.map((row) => renderRow(row))}</table>\n  );\n\n  function renderRow(row: boolean[]) {\n    return <tr>{row.map((cell) => renderCell(cell))}</tr>;\n  }\n\n  function renderCell(alive: boolean) {\n    return <td className={`cell${alive ? \" cell-alive\" : \"\"}`}></td>;\n  }\n}\n\nexport default Life;\n","import React from \"react\";\nimport \"./App.css\";\nimport { Grid, Preset } from \"./types\";\nimport { getInitialState, getNextPopulation } from \"./utils\";\nimport { useInterval } from \"./hooks\";\nimport Life from \"./Life\";\n\ninterface Props {\n  presets: Preset[];\n}\n\nfunction App(props: Props) {\n  const { presets } = props;\n\n  const [play, setPlay] = React.useState(true);\n  const [lifetime, setLifetime] = React.useState(1000);\n  const [width, setWidth] = React.useState(presets[0].grid[0].length);\n  const [height, setHeight] = React.useState(presets[0].grid.length);\n\n  const [preset, setPreset] = React.useState(presets[0].id);\n\n  const [population, setPopulation] = React.useState<Grid>(\n    getInitialState(presets[0].grid, width, height)\n  );\n\n  useInterval(tick, play ? lifetime : null);\n\n  function tick() {\n    setPopulation(getNextPopulation(population));\n  }\n\n  function updateWidth(newWidth: number) {\n    setWidth(newWidth);\n    setPreset(\"\");\n    setPopulation(getInitialState(population, newWidth, height));\n  }\n\n  function updateHeight(newHeight: number) {\n    setHeight(newHeight);\n    setPreset(\"\");\n    setPopulation(getInitialState(population, width, newHeight));\n  }\n\n  return (\n    <div>\n      Preset:{\" \"}\n      <select value={preset} onChange={(e) => loadPreset(e.target.value)}>\n        <option value=\"\">Presets</option>\n        {presets.map((preset) => (\n          <option key={preset.id} value={preset.id}>\n            {preset.description}\n          </option>\n        ))}\n      </select>\n      <br />\n      <br />\n      Cycle :{\" \"}\n      <input\n        type=\"number\"\n        value={lifetime}\n        onChange={(e) => setLifetime(+e.target.value)}\n        maxLength={4}\n        className=\"input\"\n      />{\" \"}\n      Width:{\" \"}\n      <input\n        type=\"number\"\n        value={width}\n        onChange={(e) => updateWidth(+e.target.value)}\n        maxLength={3}\n        className=\"input\"\n      />{\" \"}\n      Height:{\" \"}\n      <input\n        type=\"number\"\n        value={height}\n        onChange={(e) => updateHeight(+e.target.value)}\n        maxLength={3}\n        className=\"input\"\n      />{\" \"}\n      <br />\n      <br />\n      <button onClick={() => setPlay(!play)}>\n        {play ? \"Stop\" : \"Play\"}\n      </button>{\" \"}\n      <hr />\n      <Life population={population} />\n    </div>\n  );\n\n  function loadPreset(id: string) {\n    const newPreset = presets.find((p) => p.id === id);\n    setHeight(newPreset?.height || height);\n    setWidth(newPreset?.width || width);\n    setPopulation(newPreset?.grid || population);\n    setPreset(id);\n  }\n}\n\nexport default App;\n","import React from \"react\";\n\nexport function useInterval(callback: Function, delay: number | null) {\n  const savedCallback = React.useRef() as React.MutableRefObject<Function>;\n\n  // Remember the latest function.\n  React.useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback, savedCallback]);\n\n  // Set up the interval.\n  React.useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay, savedCallback]);\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport { getPresets } from \"./presets\";\n\nconst presets = getPresets();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App presets={presets} />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { Preset } from \"./types\";\n\nexport function getPresets(): Preset[] {\n  return [\n    {\n      id: \"block\",\n      description: \"Block (Still life)\",\n      width: 4,\n      height: 4,\n      grid: [\n        [false, false, false, false],\n        [false, true, true, false],\n        [false, true, true, false],\n        [false, false, false, false],\n      ],\n    },\n    {\n      id: \"blinker\",\n      description: \"Blinker (period 2 Oscillator)\",\n      width: 5,\n      height: 5,\n      grid: [\n        [false, false, false, false, false],\n        [false, false, false, false, false],\n        [false, true, true, true, false],\n        [false, false, false, false, false],\n        [false, false, false, false, false],\n      ],\n    },\n    {\n      id: \"toad\",\n      description: \"Toad (period 2 Oscillator)\",\n      width: 6,\n      height: 6,\n      grid: [\n        [false, false, false, false, false, false],\n        [false, false, false, false, false, false],\n        [false, false, true, true, true, false],\n        [false, true, true, true, false, false],\n        [false, false, false, false, false, false],\n        [false, false, false, false, false, false],\n      ],\n    },\n    {\n      id: \"glider\",\n      description: \"Glider (Spaceship)\",\n      width: 5,\n      height: 5,\n      grid: [\n        [false, false, false, false, false],\n        [false, false, true, false, false],\n        [false, false, false, true, false],\n        [false, true, true, true, false],\n        [false, false, false, false, false],\n      ],\n    },\n  ];\n}\n"],"sourceRoot":""}